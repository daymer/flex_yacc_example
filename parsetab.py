
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOO EQUAL EQUALS FLOAT LARGE MINUS NAME NUMBER PLUS SMALL WHILEEsiska : kiskakiska : WHILEE statement DOO expression EQUALS comparision\n             | expression EQUALS comparisionstatement : comparision SMALL comparision\n                 | comparision LARGE comparision\n                 | comparision EQUAL comparision\n    comparision : comparision PLUS expression\n                   | comparision MINUS expression\n                   | expression\n    expression : NAMEexpression : NUMBERexpression : FLOAT'
    
_lr_action_items = {'WHILEE':([0,],[3,]),'NAME':([0,3,11,12,13,14,15,16,17,25,],[5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,3,11,12,13,14,15,16,17,25,],[6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,3,11,12,13,14,15,16,17,25,],[7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,5,6,7,9,18,23,24,26,],[0,-1,-10,-11,-12,-9,-3,-7,-8,-2,]),'EQUALS':([4,5,6,7,19,],[11,-10,-11,-12,25,]),'SMALL':([5,6,7,9,10,23,24,],[-10,-11,-12,-9,13,-7,-8,]),'LARGE':([5,6,7,9,10,23,24,],[-10,-11,-12,-9,14,-7,-8,]),'EQUAL':([5,6,7,9,10,23,24,],[-10,-11,-12,-9,15,-7,-8,]),'PLUS':([5,6,7,9,10,18,20,21,22,23,24,26,],[-10,-11,-12,-9,16,16,16,16,16,-7,-8,16,]),'MINUS':([5,6,7,9,10,18,20,21,22,23,24,26,],[-10,-11,-12,-9,17,17,17,17,17,-7,-8,17,]),'DOO':([5,6,7,8,9,20,21,22,23,24,],[-10,-11,-12,12,-9,-4,-5,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'siska':([0,],[1,]),'kiska':([0,],[2,]),'expression':([0,3,11,12,13,14,15,16,17,25,],[4,9,9,19,9,9,9,23,24,9,]),'statement':([3,],[8,]),'comparision':([3,11,13,14,15,25,],[10,18,20,21,22,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> siska","S'",1,None,None,None),
  ('siska -> kiska','siska',1,'p_S','test_test.py',75),
  ('kiska -> WHILEE statement DOO expression EQUALS comparision','kiska',6,'p_if_statement_2','test_test.py',80),
  ('kiska -> expression EQUALS comparision','kiska',3,'p_if_statement_2','test_test.py',81),
  ('statement -> comparision SMALL comparision','statement',3,'p_if_statement','test_test.py',92),
  ('statement -> comparision LARGE comparision','statement',3,'p_if_statement','test_test.py',93),
  ('statement -> comparision EQUAL comparision','statement',3,'p_if_statement','test_test.py',94),
  ('comparision -> comparision PLUS expression','comparision',3,'p_comparision','test_test.py',109),
  ('comparision -> comparision MINUS expression','comparision',3,'p_comparision','test_test.py',110),
  ('comparision -> expression','comparision',1,'p_comparision','test_test.py',111),
  ('expression -> NAME','expression',1,'p_var','test_test.py',127),
  ('expression -> NUMBER','expression',1,'p_num','test_test.py',133),
  ('expression -> FLOAT','expression',1,'p_float','test_test.py',138),
]
